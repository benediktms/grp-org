name: CI - Pull Request
on: [pull_request]

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  pull-request:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost/test

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Migrate DB & generate prisma client
        run: yarn prisma migrate deploy

      - name: Start agents
        run: npx nx-cloud start-ci-run

      - name: Build
        run: npx nx affected --target=build --parallel --max-parallel=3

      - name: Lint
        run: npx nx affected --target=lint --parallel --max-parallel=2

      - name: Test
        run: npx nx affected --target=test --parallel --max-parallel=2

      - name: Stop agents
        run: npx nx-cloud stop-all-agents

  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - run: yarn install --frozen-lockfile
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
